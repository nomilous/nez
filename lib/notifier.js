// Generated by CoffeeScript 1.4.0
var Notifier, NotifierFactory, events,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

events = require('events');

Notifier = (function(_super) {

  __extends(Notifier, _super);

  function Notifier(events) {
    this.events = events;
  }

  Notifier.prototype.on = function(event, callback) {
    if (!this.events[event]) {
      throw new Error('No such event: "' + event + '"');
    }
    return Notifier.__super__.on.call(this, event, callback);
  };

  return Notifier;

})(events.EventEmitter);

module.exports = NotifierFactory = {
  notifiers: {},
  create: function(name, events) {
    var _base;
    return (_base = NotifierFactory.notifiers)[name] || (_base[name] = new Notifier(events));
  }
};
