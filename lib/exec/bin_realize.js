// Generated by CoffeeScript 1.6.3
var Realize, defer, fs, marshalArgs, pipeline, program, sequence, withError;

program = require('commander');

fs = require('fs');

defer = require('when').defer;

pipeline = require('when/pipeline');

sequence = require('when/sequence');

Realize = require('../realization/realize');

program.version(JSON.parse(fs.readFileSync(__dirname + '/../../package.json', 'utf8')).version);

program.usage('[options] [realizer]');

program.option('-p, --port  <num>      ', 'Connect to objective at port');

program.option('-X, --no-https         ', 'Connect insecurely', false);

program.parse(process.argv);

pipeline([
  function() {
    return marshalArgs(program);
  }, function(params) {
    return Realize.loadRealizer(params);
  }, function(realizer) {
    return Realize.startNotifier(realizer);
  }, function(controls) {
    return Realize.runRealizer(controls);
  }
]).then(function(resolve) {}, function(error) {
  process.stderr.write(error.toString());
  return process.exit(error.errno || 100);
}, function(notify) {});

marshalArgs = function(program) {
  var marshal;
  marshal = defer();
  process.nextTick(function() {
    return marshal.resolve({
      filename: program.args[0],
      connect: program.connect,
      https: program.https,
      port: program.port
    });
  });
  return marshal.promise;
};

withError = function(errno, code, message) {
  var error;
  error = new Error(message);
  error.errno = errno;
  error.code = code;
  return error;
};
