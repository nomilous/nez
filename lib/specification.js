// Generated by CoffeeScript 1.4.0
var Confirmation, Specification;

require('fing');

Confirmation = require('./confirmation');

Specification = (function() {

  function Specification() {}

  Specification.objects = {};

  Specification.create = function(opts) {
    var config, confirmation, confirmations, edges, expectation, global, name, object, realizer, stackName, _base, _name;
    stackName = opts.stack;
    object = opts["interface"];
    config = opts.config;
    realizer = opts.realizer;
    try {
      global = object.process.title === 'node';
    } catch (error) {
      global = false;
    }
    (_base = this.objects)[_name = object.fing.ref] || (_base[_name] = {
      "interface": object,
      global: global,
      confirmations: []
    });
    confirmations = this.objects[object.fing.ref].confirmations;
    if (!(edges = this.getNode(stackName).edges)) {
      throw "Cannot access current Node in stack='" + stackName + "'";
    }
    for (name in config) {
      expectation = {};
      expectation[name] = config[name];
      expectation[name].realizer = realizer;
      confirmation = new Confirmation(object, {
        expectation: expectation
      });
      confirmations.push(confirmation);
      edges.push(confirmation);
    }
    return this.objects[object.fing.ref].confirmations.push(confirmation);
  };

  Specification.getNode = function(stackName) {
    return require('./nez').stacks[stackName].node;
  };

  return Specification;

})();

module.exports = Specification;
