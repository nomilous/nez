// Generated by CoffeeScript 1.4.0
var Node, Stack,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

require('fing');

Node = require('./node');

module.exports = Stack = (function() {

  Stack.prototype.className = 'Stack';

  function Stack(name) {
    this.name = name;
    this.stacker = __bind(this.stacker, this);

    this.stack = [];
    this.node = new Node('root');
    this.walker = this.tree = this.node.edges;
  }

  Stack.prototype.stacker = function(label, callback) {
    return this.push(arguments);
  };

  Stack.prototype.push = function(args) {
    var callback, klass, label, node;
    label = args[0];
    callback = args[1];
    klass = this.pendingClass || this.name;
    if (callback && callback.fing.args.length > 0) {
      this.pendingClass = callback.fing.args[0].name;
    }
    if (label) {
      this.node = new Node(label, {
        callback: callback,
        "class": klass
      });
      this.stack.push(this.node);
      this.walker.push(this.node);
      this.walker = this.node.edges;
      if (callback) {
        this.node.callback(this.stacker);
      }
      node = this.stack.pop();
      if (this.stack.length > 0) {
        this.node = this.stack[this.stack.length - 1];
        this.walker = this.node.edges;
      }
      return this.pendingClass = this.node["class"];
    }
  };

  Stack.prototype.validator = function(done) {
    console.log("validate");
    return done();
  };

  return Stack;

})();
