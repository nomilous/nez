// Generated by CoffeeScript 1.4.0
var Stack, stack,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Stack = (function() {

  Stack.prototype.className = 'Stack';

  function Stack(name) {
    this.name = name;
    this.pusher = __bind(this.pusher, this);

    this.stack = [];
  }

  Stack.prototype.pusher = function(label, callback) {
    if (label) {
      return this.push(arguments);
    }
    return this.end();
  };

  Stack.prototype.push = function(args) {
    return this.stack.push({
      label: args[0],
      callback: args[1]
    });
  };

  Stack.prototype.end = function() {
    return console.log("end()");
  };

  return Stack;

})();

module.exports = stack = {
  stacks: {},
  create: function(name) {
    var newStack;
    newStack = new Stack(name);
    stack.stacks[name] = newStack;
    return newStack.pusher;
  },
  get: function(name) {
    return stack.stacks[name];
  }
};
