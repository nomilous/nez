// Generated by CoffeeScript 1.6.3
var Develop, Objective, Realize, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Objective = require('../objective/objective');

Realize = require('../realization/realize');

Develop = (function(_super) {
  __extends(Develop, _super);

  function Develop() {
    _ref = Develop.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Develop.prototype.startMonitor = function(opts, jobTokens, jobEmitter) {
    return console.log(jobTokens);
  };

  Develop.prototype.onBoundryAssemble = function(opts, callback) {
    return Realize.loadRealizer(opts).then(function(realizer) {
      var phrase;
      phrase = {
        title: realizer.opts.title,
        control: realizer.opts,
        fn: realizer.realizerFn
      };
      delete phrase.control.title;
      opts.mode = 'nest';
      return callback(null, phrase);
    }, function(error) {
      return callback(error);
    });
  };

  Develop.prototype.configure = function(opts, done) {
    opts.boundry = ['story', 'spec', 'test'];
    return done();
  };

  Develop.prototype.defaultObjective = function(spec) {
    return spec.link({
      directory: './spec'
    });
  };

  return Develop;

})(Objective);

module.exports = Develop;
