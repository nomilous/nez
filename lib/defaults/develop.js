// Generated by CoffeeScript 1.6.3
var Develop, Objective, Realize, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Objective = require('../objective/objective');

Realize = require('../realization/realize');

Develop = (function(_super) {
  __extends(Develop, _super);

  function Develop() {
    _ref = Develop.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Develop.prototype.onBoundry = function(params, callback) {
    return Realize.loadRealizer(params).then(function(realizer) {
      var result;
      result = {
        title: realizer.opts.title,
        opts: realizer.opts,
        fn: realizer.realizerFn
      };
      delete realizer.opts.title;
      return callback(null, result);
    }, function(error) {
      return callback(error);
    });
  };

  Develop.prototype.configure = function(opts, done) {
    opts.boundry = ['spec', 'test'];
    return done();
  };

  Develop.prototype.defaultObjective = function(spec) {
    return spec.link({
      directory: './spec'
    });
  };

  return Develop;

})(Objective);

module.exports = Develop;
