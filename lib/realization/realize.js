// Generated by CoffeeScript 1.6.3
var compile, defer, fs, withError;

fs = require('fs');

defer = require('when').defer;

compile = require('coffee-script').compile;

withError = function(errno, code, message) {
  var error;
  error = new Error(message);
  error.errno = errno;
  error.code = code;
  return error;
};

module.exports.loadRealizer = function(params) {
  var connect, filename, https, load, port, secret;
  filename = params.filename;
  connect = params.connect;
  https = params.https;
  port = params.port;
  secret = process.env.SECRET;
  load = defer();
  process.nextTick(function() {
    var error, realizer, realzerFn;
    if (filename == null) {
      return load.reject(withError(101, 'MISSING_ARG', 'missing realizerFile'));
    }
    try {
      realizer = fs.readFileSync(filename, 'utf8');
    } catch (_error) {
      error = _error;
      return load.reject(error);
    }
    try {
      if (filename.match(/[coffee|litcoffee]$/)) {
        realizer = compile(realizer, {
          bare: true
        });
      }
    } catch (_error) {
      error = _error;
      return load.reject(error);
    }
    try {
      realizer = eval(realizer);
    } catch (_error) {
      error = _error;
      return load.reject(error);
    }
    realzerFn = realizer.realize || function(Signature) {
      return Signature('Title', function(end) {
        return end();
      });
    };
    delete realizer.realize;
    if (connect != null) {
      realizer.connect = {
        transport: https ? 'https' : 'http',
        secret: secret,
        port: port
      };
    }
    return load.resolve({
      opts: realizer,
      realizerFn: realzerFn
    });
  });
  return load.promise;
};
