// Generated by CoffeeScript 1.6.3
var Notice, async, ipso, tools;

Notice = require('notice');

async = require('also').inject.async;

tools = require('../tools');

ipso = require('ipso');

module.exports = function(title, optionalOpts, realizerFn) {
  var context, realizer, _ref;
  _ref = ipso.validate.apply(this, arguments), context = _ref.context, realizerFn = _ref.realizerFn;
  context.tools = tools;
  realizer = async({
    beforeAll: function(done, inject) {
      return Notice.connect('realizer', context, function(error, notice) {
        if (error != null) {
          if (!(error instanceof Error)) {
            return done(new Error(error));
          }
          return done(error);
        }
        inject.first[0] = context;
        inject.first[1] = notice;
        return done();
      });
    },
    beforeEach: function(done, inject) {
      inject.defer;
      return done();
    },
    error: function(error) {
      return console.log('Realizer error!', error);
    }
  }, ipso);
  return realizer(realizerFn);
};
