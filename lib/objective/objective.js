// Generated by CoffeeScript 1.6.3
var Notice, Realizers, async, eo, tools;

Notice = require('notice');

async = require('also').inject.async;

tools = require('../tools');

Realizers = require('../realizers');

eo = require('eo');

module.exports = function(title, opts, objectiveFn) {
  var context, objective;
  context = eo.validate.apply(this, arguments);
  objective = async({
    beforeAll: function(done, inject) {
      var notice;
      context.tools = tools;
      notice = Notice.create('objective', context.messenger || eo.messenger);
      return Realizers(context, notice, function(error, realizers) {
        if (error != null) {
          return done(error);
        }
        context.realizers = realizers;
        inject.first[0] = context;
        inject.first[1] = notice;
        return done();
      });
    },
    error: context.error || (console.log('WARNING', 'objective without error handler'), function(error) {
      return console.log('ERROR', error);
    })
  }, eo);
  return objective(objectiveFn);
};
