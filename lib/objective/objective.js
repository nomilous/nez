// Generated by CoffeeScript 1.6.3
var eo, inject, notice;

notice = require('notice');

eo = require('eo');

inject = require('also').inject;

module.exports = function(title, opts, objectiveFn) {
  var key, objective, options;
  if (typeof title !== 'string') {
    throw new Error('objective(title, opts, fn) requires title as string');
  }
  if (typeof opts === 'function') {
    objectiveFn = opts;
    opts = {};
  }
  if (typeof objectiveFn !== 'function') {
    throw new Error('objective(title, opts, fn) requires function as last argument');
  }
  options = {
    title: title
  };
  for (key in opts) {
    options[key] = opts[key];
  }
  objective = inject.async({
    beforeAll: function(done, context) {
      context.first.push(options);
      context.first.push(notice.create('objective', opts.messenger || eo.messenger));
      return done();
    }
  }, function(context, notifier, fn) {
    return eo(context, notifier, fn);
  });
  return objective(objectiveFn);
};
