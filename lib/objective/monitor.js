// Generated by CoffeeScript 1.6.3
var EventEmitter, Hound,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

Hound = require('hound');

module.exports.createFunction = function(Realizers) {
  var DirectoryMonitor, monitor;
  monitor = function(opts) {
    if (opts.directory != null) {
      return monitor.dirs.add(opts.directory, opts.match, opts.ref);
    }
  };
  monitor.DirectoryMonitor = DirectoryMonitor = (function(_super) {
    __extends(DirectoryMonitor, _super);

    function DirectoryMonitor(opts) {
      if (opts == null) {
        opts = {};
      }
      this.monitors = {};
    }

    DirectoryMonitor.prototype.add = function(dirname, match, ref) {
      var event, watch, _i, _len, _ref, _results,
        _this = this;
      if (this.monitors[dirname] == null) {
        this.monitors[dirname] = watch = Hound.watch(dirname);
        _ref = ['create', 'change', 'delete'];
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          event = _ref[_i];
          _results.push((function(event) {
            return watch.on(event, function(filename, stats) {
              if (match != null) {
                if (!filename.match(match)) {
                  return;
                }
              }
              if (!(Realizers.autospawn && event === 'change' && ref === 'realizer')) {
                return _this.emit(event, filename, stats, ref);
              }
              return Realizers.get({
                filename: filename
              }).then(function(realizer) {
                return console.log({
                  GOT_REALIZER: realizer
                });
              }, function(error) {
                return console.log({
                  TODO: 'handle error getting realizer@' + filename
                });
              });
            });
          })(event));
        }
        return _results;
      }
    };

    return DirectoryMonitor;

  })(EventEmitter);
  monitor.dirs || (monitor.dirs = new DirectoryMonitor);
  return monitor;
};
