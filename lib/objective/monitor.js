// Generated by CoffeeScript 1.6.3
var DirectoryMonitor, EventEmitter, Hound,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

Hound = require('hound');

DirectoryMonitor = (function(_super) {
  __extends(DirectoryMonitor, _super);

  function DirectoryMonitor() {
    this.monitors = {};
  }

  DirectoryMonitor.prototype.add = function(directory) {
    var event, watch, _i, _len, _ref, _results,
      _this = this;
    if (this.monitors[directory] == null) {
      this.monitors[directory] = watch = Hound.watch(directory);
      _ref = ['create', 'change', 'delete'];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        _results.push((function(event) {
          return watch.on(event, function(filename) {
            return _this.emit(event, filename);
          });
        })(event));
      }
      return _results;
    }
  };

  return DirectoryMonitor;

})(EventEmitter);

module.exports.DirectoryMonitor = DirectoryMonitor;
