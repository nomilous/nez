// Generated by CoffeeScript 1.6.3
var defer, fromfilename, realizers, spawner;

defer = require('when').defer;

spawner = require('./spawner');

realizers = {};

fromfilename = {};

module.exports = {
  autospawn: false,
  get: function(opts) {
    var getting,
      _this = this;
    if (opts == null) {
      opts = {};
    }
    getting = defer();
    process.nextTick(function() {
      if (opts.filename != null) {
        return getting.resolve(fromfilename[opts.filename]);
      }
    });
    return getting.promise;
  },
  update: function(tokens) {
    var updating,
      _this = this;
    updating = defer();
    process.nextTick(function() {
      var filename, path, token, uuid;
      for (path in tokens) {
        token = tokens[path];
        uuid = token.uuid;
        if (token.type !== 'tree') {
          continue;
        }
        realizers[uuid] || (realizers[uuid] = {});
        realizers[uuid].token = token;
        if (token.source == null) {
          continue;
        }
        switch (token.source.type) {
          case 'file':
            filename = token.source.filename;
            fromfilename[filename] = realizers[uuid];
        }
      }
      return updating.resolve();
    });
    return updating.promise;
  }
};
